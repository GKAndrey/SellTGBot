from modules.settings import *
from modules.models import *
from modules.products import *
from modules.admins import *
from modules.func import *

@bot.message_handler(commands=["start"])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–µ—Ä–µ–π—Ç–∏ –∫ –º–µ–Ω—é")
    markup.add(btn1)
    msg = bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –º–∞–≥–∞–∑–∏–Ω ShopBot!", reply_markup=markup)
    bot.register_next_step_handler(msg, start_bot)

@bot.message_handler(commands=["question"])
def q(message):
    global question_list
    try:
        question_text = message.text.split(' ',maxsplit = 1)[1]
        bot.send_message(message.chat.id,f"–í–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞. –í–∞—à –≤–æ–ø—Ä–æ—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {len(question_list)+1} –≤ –æ—á–µ—Ä–µ–¥–∏")
        question_list.append([message.chat.id, question_text, message.from_user.username])
        with open(f"{PATH}/questionlist.json", "w") as write_file:
            json.dump(question_list, write_file,sort_keys=False,indent=4,ensure_ascii=False,)
        for i in admin_list:
            bot.send_message(i,f"–£ –≤–∞—Å –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å. –í—Å–µ–≥–æ {len(question_list)} –≤–æ–ø—Ä–æ—Å–æ–≤.")
    except:
        bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. (/question —Ç–µ–∫—Å—Ç)")

@bot.message_handler(commands=["show_questions"])
def show_question(message):
    if question_list == []:
        bot.send_message(message.chat.id, f'–í–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç.')
    elif message.chat.id in admin_list:
        j = 1
        for i in question_list:
            bot.send_message(message.chat.id, f'{j}) {i[1]} (–æ—Ç @{i[2]})')
            j += 1

@bot.message_handler(commands=["answer"])
def answ(message):
    global question_list
    try:
        id = message.text.split(' ', maxsplit = 2)[1]
        text = message.text.split(' ', maxsplit = 2)[2]
        bot.send_message(question_list[int(id)-1][0], f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å({question_list[int(id)-1][1]}):")
        bot.send_message(question_list[int(id)-1][0], text)
        del question_list[int(id)- 1]
        bot.reply_to(message, '–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')
    except:
        bot.reply_to(message, "–ù–µ–ª—å–∑—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å.")

@bot.message_handler(commands=["add"])
def add(message):
    if message.from_user.id in admin_list:
        global adder
        bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–ù–∞–∑–≤–∞–Ω–∏–µ** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è.", reply_markup=types.ReplyKeyboardRemove())
        adder = 1

@bot.message_handler(content_types=["text"])
def text(message):
    if message.from_user.id in admin_list:
        global adder
        if adder == 1:
            product_list.append(Product(message.text))
            adder = 2
            bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–§–æ—Ç–æ** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è.")
        elif adder == 3:
            product_list[-1].add_opis(message.text)
            bot.send_message(message.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–¢–µ–≥–∏** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è. –ü—Ä–∏–º–µ—Ä: "#–°–ø–æ—Ä—Ç#–ú–æ–¥–∞#–ï–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞".')
            adder = 4
        elif adder == 5:
            bot.send_message(message.chat.id, '–í—Å–µ –≥–æ—Ç–æ–≤–æ, –æ–±—å—è–≤–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ –≤ –∫–∞—Ç–∞–ª–æ–≥.')
            adder = 0
            product_list[-1].add_money(message.text)
            save_prod()
            up_list_prod()
        elif adder == 4:
            try:
                tegs = message.text.split("#")
                bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç.')
                product_list[-1].tegs_prod(tegs)
                adder = 5
            except:
                bot.send_message(message.chat.id, '–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (#Sport#–°–ø–æ—Ä—Ç#–ï–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞#–ù–∞–¥–æ).')

@bot.message_handler(content_types=["photo"])
def poto_use(message):
    if message.from_user.id in admin_list:
        global adder
        if adder == 2:
            try:
                file = bot.get_file(message.photo[-1].file_id)
                file = bot.download_file(file.file_path)
                with open(f'{path_Im_Prod}/{product_list[-1].name}.png', 'wb') as f:
                    f.write(file)
                product_list[-1].add_photo()
                bot.send_message(message.chat.id, '–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –í–≤–µ–¥–∏—Ç–µ **–û–ø–∏—Å–∞–Ω–∏–µ** –æ–±—å—è–≤–ª–µ–Ω–∏—è/–ø—Ä–æ–¥—É–∫—Ç–∞.')
                adder = 3
            except:
                pass
