# from modules.models import *
# from modules.products import *
# from modules.admins import *
from modules.func import *

strt() #–û—Ç—Å—ã–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏, –≤—ã–∫–ª—é—á–∞–π—Ç–µ –Ω–∞ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–æ–≤.

@bot.message_handler(commands=["start"])
def start(message):
    global its_user
    us_log(message)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–µ—Ä–µ–π—Ç–∏ –∫ –º–µ–Ω—é")
    markup.add(btn1)
    msg = bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –º–∞–≥–∞–∑–∏–Ω ShopBot!", reply_markup=markup)
    bot.register_next_step_handler(msg, start_bot)



@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "cb_yes":
        bot.answer_callback_query(call.id, "–û–ø–æ–≤–µ—â–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã üîï‚úÖ")
    elif call.data == "cb_no":
        bot.answer_callback_query(call.id, "–û–ø–æ–≤–µ—â–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã üîï‚ùå")
    elif call.data == 'close_quest':
        bot.clear_step_handler_by_chat_id(chat_id=call.message.chat.id)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–û—Ç–º–µ–Ω–µ–Ω–æ.')
        murk(call)
    elif call.data == 'close_menu':
        opt(call.message)