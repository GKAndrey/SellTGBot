from modules.products import *

# def adm_pls(ID):
#     admin_list.append(ID)
#     with open("Admins.json", "w") as write_file:
#         json.dump(admin_list, write_file)

# def adm_mns(ID):
#     try:
#         admin_list.remove(ID)
#         with open("Admins.json", "w") as write_file:
#             json.dump(admin_list, write_file,sort_keys=False,indent=4,ensure_ascii=False,)
#     except:
#         pass

# @bot.message_handler(commands=["adminp"])
# def admins(message):
#     print(message.from_user.id)
#     if 1439133134 == message.from_user.id:
#         try:
#             messs = message.text.split("", 2)[1]
#             messs1 = message.text.split("", 2)[2]
#         except:
#             bot.send_message(message.chat.id, "–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

# @bot.message_handler(commands=["remove"])
# def add(message):
#     if message.from_user.id in admin_list:
#         txt_mes = message.text.split()
#         if len(txt_mes) > 1:
#             markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
#             for i in os.listdir(path_Im_Prod):
#                 ind = i.replace(".png")
#                 reamove_prod = types.KeyboardButton(f"/remove {ind}")
#                 markup.add(reamove_prod)
#             cansel = types.KeyboardButton("/cansel –≤—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤")
#             markup.add(cansel)
#             bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –Ω–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö—å–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ "/remove (–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—å—è–≤–ª–µ–Ω–∏—è)"', reply_markup=markup)
#         # else:
#         #     remove_prod()
#         #     up_list_prod()

def admin_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    add_prod = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä ‚ûï")
    remove_prod = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä üóë")
    qst = types.KeyboardButton("–ú–µ–Ω—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ")
    cansel = types.KeyboardButton("–í—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤ üõë")
    markup.add(add_prod, remove_prod, qst, cansel)
    msg = bot.send_message(message.chat.id, "–û–≥–æ, –≤–∞–∂–Ω—ã–µ –ª—é–¥–∏. –ö–∞–∫–æ–≤–∞ —Ü–µ–ª—å –≤–∞—à–µ–≥–æ –≤–∏–∑–∏—Ç–∞?", reply_markup=markup)
    bot.register_next_step_handler(msg, next_admin_click)

def next_admin_click(message):
    if message.text == "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä ‚ûï":
        global adder
        msg = bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è.", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, add1)

def add1(message):
    product_list.append(Product(message.text))
    msg = bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–§–æ—Ç–æ** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è.")
    bot.register_next_step_handler(msg, add2)

def add2(message):
    try:
        file = bot.get_file(message.photo[-1].file_id)
        file = bot.download_file(file.file_path)
        with open(f'{path_Im_Prod}/{product_list[-1].name}.png', 'wb') as f:
            f.write(file)
        product_list[-1].add_photo()
        bot.send_message(message.chat.id, '–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –í–≤–µ–¥–∏—Ç–µ **–û–ø–∏—Å–∞–Ω–∏–µ** –æ–±—å—è–≤–ª–µ–Ω–∏—è/–ø—Ä–æ–¥—É–∫—Ç–∞.')
        adder = 3
    except:
        pass

@bot.message_handler(commands=["answer"])
def answ(message):
    global question_list
    try:
        id = message.text.split(' ', maxsplit = 2)[1]
        text = message.text.split(' ', maxsplit = 2)[2]
        bot.send_message(question_list[int(id)-1][0], f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å({question_list[int(id)-1][1]}):")
        bot.send_message(question_list[int(id)-1][0], text)
        del question_list[int(id)- 1]
        bot.reply_to(message, '–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')
        cursor.execute("DELETE FROM orders WHERE id=? text=?;", [question_list[int(id)-1][0], question_list[int(id)-1][2]])
    except:
        bot.reply_to(message, "–ù–µ–ª—å–∑—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å.")

@bot.message_handler(commands=["qq"])
def show_question(message):
    if question_list == []:
        bot.send_message(message.chat.id, f'–í–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç.')
    elif message.chat.id in admin_list:
        j = 1
        for i in question_list:
            bot.send_message(message.chat.id, f'{j}) {i[1]} (–æ—Ç @{i[2]})')
            j += 1

# @bot.message_handler(content_types=["text"])
# def text(message):
#     if message.from_user.id in admin_list:
#         global adder
#         if adder == 1:
#             product_list.append(Product(message.text))
#             adder = 2
#             bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–§–æ—Ç–æ** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è.")
#         elif adder == 3:
#             product_list[-1].add_opis(message.text)
#             bot.send_message(message.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–¢–µ–≥–∏** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è. –ü—Ä–∏–º–µ—Ä: "#–°–ø–æ—Ä—Ç#–ú–æ–¥–∞#–ï–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞".')
#             adder = 4
#         elif adder == 5:
#             bot.send_message(message.chat.id, '–í—Å–µ –≥–æ—Ç–æ–≤–æ, –æ–±—å—è–≤–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ –≤ –∫–∞—Ç–∞–ª–æ–≥.')
#             adder = 0
#             product_list[-1].add_money(message.text)
#             save_prod()
#             up_list_prod()
#         elif adder == 4:
#             try:
#                 tegs = message.text.split("#")
#                 bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç.')
#                 product_list[-1].tegs_prod(tegs)
#                 adder = 5
#             except:
#                 bot.send_message(message.chat.id, '–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (#Sport#–°–ø–æ—Ä—Ç#–ï–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞#–ù–∞–¥–æ).')