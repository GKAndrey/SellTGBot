from modules.user_log import *
from modules.func import *

def adm_pls(ID):
    add_admin = f'''
UPDATE users
SET admin = '1'
WHERE id = '{ID}';
'''
    cursor.execute(add_admin)
    con.commit()

def adm_mns(ID):
    add_admin = f'''
UPDATE users
SET admin = NULL
WHERE id = '{ID}';
'''
    cursor.execute(add_admin)
    con.commit()

def admin_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    add_prod = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä ‚ûï")
    remove_prod = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä üóë")
    qst = types.KeyboardButton("–í–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚ùì")
    cansel = types.KeyboardButton("–í—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤ üõë")
    markup.add(add_prod, remove_prod, qst, cansel)
    msg = bot.send_message(message.chat.id, "–û–≥–æ, –≤–∞–∂–Ω—ã–µ –ª—é–¥–∏. –ö–∞–∫–æ–≤–∞ —Ü–µ–ª—å –≤–∞—à–µ–≥–æ –≤–∏–∑–∏—Ç–∞?", reply_markup=markup)
    bot.register_next_step_handler(msg, next_admin_click)

def next_admin_click(message):
    if message.text == "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä ‚ûï":
        msg = bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è.", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, add1)
    elif message.text == "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä üóë":
        pass
    elif message.text == "–í–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚ùì":
        pass
    elif message.text == "–í—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤ üõë":
        bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤.")
        murk(message)

def add1(message):
    global prod_us_var
    # product_list.append(Product(message.text))
    if message.content_type == "text" and message.text != "":
        prod_us_var = []
        msg = bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–§–æ—Ç–æ** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è (.png).", parse_mode = "Markdown")
        prod_us_var.append(message.text)
        bot.register_next_step_handler(msg, add2)

def add2(message):
    if message.content_type == "photo":
        file = bot.get_file(message.photo[-1].file_id)
        file = bot.download_file(file.file_path)
        with open(f'{path_Im_Prod}/{product_list[]}.png', 'wb') as f:
            f.write(file)
        product_list[-1].add_photo()
        msg = bot.send_message(message.chat.id, '–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –í–≤–µ–¥–∏—Ç–µ **–û–ø–∏—Å–∞–Ω–∏–µ** –æ–±—å—è–≤–ª–µ–Ω–∏—è/–ø—Ä–æ–¥—É–∫—Ç–∞.')
        bot.register_next_step_handler(msg, add3)
    else:
        msg = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ .pdf')
        bot.register_next_step_handler(msg, add2)

def add3(message):
    if message.content_type == "text" and message.text != "":
        product_list[-1].add_opis(message.text)
        bot.send_message(message.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–¢–µ–≥–∏** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è. –ü—Ä–∏–º–µ—Ä: "#–°–ø–æ—Ä—Ç#–ú–æ–¥–∞#–ï–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞".')

@bot.message_handler(commands=["answer"])
def answ(message):
    global question_list
    try:
        id = message.text.split(' ', maxsplit = 2)[1]
        text = message.text.split(' ', maxsplit = 2)[2]
        bot.send_message(question_list[int(id)-1][0], f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å({question_list[int(id)-1][1]}):")
        bot.send_message(question_list[int(id)-1][0], text)
        del question_list[int(id)- 1]
        bot.reply_to(message, '–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')
        cursor.execute("DELETE FROM orders WHERE id=? text=?;", [question_list[int(id)-1][0], question_list[int(id)-1][2]])
    except:
        bot.reply_to(message, "–ù–µ–ª—å–∑—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å.")

@bot.message_handler(commands=["qq"])
def show_question(message):
    if question_list == []:
        bot.send_message(message.chat.id, f'–í–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç.')
    elif message.chat.id in admin_list:
        j = 1
        for i in question_list:
            bot.send_message(message.chat.id, f'{j}) {i[1]} (–æ—Ç @{i[2]})')
            j += 1

# @bot.message_handler(content_types=["text"])
# def text(message):
#     if message.from_user.id in admin_list:
#         global adder
#         if adder == 1:
#             product_list.append(Product(message.text))
#             adder = 2
#             bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–§–æ—Ç–æ** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è.")
#         elif adder == 3:
#             product_list[-1].add_opis(message.text)
#             bot.send_message(message.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–¢–µ–≥–∏** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è. –ü—Ä–∏–º–µ—Ä: "#–°–ø–æ—Ä—Ç#–ú–æ–¥–∞#–ï–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞".')
#             adder = 4
#         elif adder == 5:
#             bot.send_message(message.chat.id, '–í—Å–µ –≥–æ—Ç–æ–≤–æ, –æ–±—å—è–≤–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ –≤ –∫–∞—Ç–∞–ª–æ–≥.')
#             adder = 0
#             product_list[-1].add_money(message.text)
#             save_prod()
#             up_list_prod()
#         elif adder == 4:
#             try:
#                 tegs = message.text.split("#")
#                 bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç.')
#                 product_list[-1].tegs_prod(tegs)
#                 adder = 5
#             except:
#                 bot.send_message(message.chat.id, '–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (#Sport#–°–ø–æ—Ä—Ç#–ï–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞#–ù–∞–¥–æ).')