from modules.admins import admin_menu
from modules.user_log import *

def murk(mess):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–¢–æ–≤–∞—Ä—ã üõí')
    btn2 = types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìó')
    btn4 = types.KeyboardButton('–ü–æ–º–æ—â—å ‚ùì')
    cns = types.KeyboardButton('–ó–∞–∫—Ä—ã—Ç—å ‚ùå')
    if its_user[mess.from_user.id].admin == 1:
        btn3 = types.KeyboardButton('–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å üéÆ')
        markup.add(btn1, btn2, btn3, btn4, cns)
    else:
        markup.add(btn1, btn2, btn4, cns)
    msg = bot.send_message(mess.from_user.id, '–í—ã–±–µ—Ä–µ—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
    bot.register_next_step_handler(msg, check_answ)

def start_bot(message):
    if message.text == 'üëã –ü–µ—Ä–µ–π—Ç–∏ –∫ –º–µ–Ω—é':
            murk(message)
    else:
        bot.send_message(message.from_user.id, '–ü—Ä–æ—Å–∏–º –≤–∞—Å –∑–∞—Ä–∞–Ω–µ–µ, –Ω–µ —Å—Ç–æ–∏—Ç –ª–æ–º–∞—Ç—å –ª–æ–≥–∏–∫—É –±–æ—Ç–∞, –≤—Ä—è—Ç–ª–∏ —É –≤–∞—Å —ç—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è, –∫ —Ç–æ–º—É –∂–µ, —Ö—É–∂–µ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ —Ç–æ–ª—å–∫–æ —Å–µ–±–µ, –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–º–µ—Ç–∏—Ç –≤–∞—Å –∫–∞–∫ –≤–∏–Ω–æ–≤–Ω–∏–∫–∞ –∏ –¥–æ–±–∞–≤–∏—Ç –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫. –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–∞–º–µ—Ä—è–Ω–Ω–æ, —Ç–æ –±—É–¥—å—Ç–µ –æ–∫—É—Ä–∞—Ç–Ω–µ–µ –∏ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏, –æ–Ω–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã.')
        msg = bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–µ—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:')
        bot.register_next_step_handler(msg, check_answ)

def check_answ(message):
    if message.text == '–¢–æ–≤–∞—Ä—ã üõí': #–ù–∞–¥ –ª–æ–≥–∏–∫–æ–π —Ä–∞–±–æ—Ç–∞–µ—Ç –í–∞–Ω—è
        pass
    elif message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìó':
        pass
    elif message.text == '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å üéÆ':
        if its_user[message.from_user.id].admin == 1:
            admin_menu(message)
        else:
            bot.send_message(message.chat.id, f'–í—ã (@{message.from_user.username}) –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º –±–æ—Ç–∞. –í —Å–ª—É—á–∞–µ –≤–æ–ø—Ä–æ—Å–æ–≤, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏–ª–∏ –≤–∞–∫–∞–Ω—Å–∏–π –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É (–ü–æ–º–æ—â—å ‚ùì).')
    elif message.text == '–ü–æ–º–æ—â—å ‚ùì':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="close_quest")
        markup.add(btn1)
        bot.send_message(message.from_user.id, '--------------------------------------', reply_markup=telebot.types.ReplyKeyboardRemove())
        msg = bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:', reply_markup=markup)
        bot.register_next_step_handler(msg, quests)

    elif message.text == '–ó–∞–∫—Ä—ã—Ç—å ‚ùå':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('/start')
        markup.add(btn1)
        bot.send_message(message.chat.id, "–ë—É–¥—É –∂–¥–∞—Ç—å –Ω–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏.", reply_markup=markup)

    else:
        bot.send_message(message.from_user.id, '–ü—Ä–æ—Å–∏–º –≤–∞—Å, –Ω–µ —Å—Ç–æ–∏—Ç –ª–æ–º–∞—Ç—å –ª–æ–≥–∏–∫—É –±–æ—Ç–∞, –≤—Ä—è—Ç–ª–∏ —É –≤–∞—Å —ç—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è, –∫ —Ç–æ–º—É –∂–µ, —Ö—É–∂–µ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ —Ç–æ–ª—å–∫–æ —Å–µ–±–µ, –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–º–µ—Ç–∏—Ç –≤–∞—Å –∫–∞–∫ –≤–∏–Ω–æ–≤–Ω–∏–∫–∞ –∏ –¥–æ–±–∞–≤–∏—Ç –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫. –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–∞–º–µ—Ä—è–Ω–Ω–æ, —Ç–æ –±—É–¥—å—Ç–µ –æ–∫—É—Ä–∞—Ç–Ω–µ–µ –∏ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏, –æ–Ω–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã.')
        msg = bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–µ—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:')
        bot.register_next_step_handler(msg, check_answ)

def quests(message):
    global question_list
    question_list.append((message.chat.id, message.from_user.username, message.text))
    orders_sql = '''
    INSERT INTO orders
    VALUES (?,?,?);
    '''
    cursor.execute(orders_sql, question_list[-1])
    con.commit()
    for i in admin_list:
        bot.send_message(i,f"–£ –≤–∞—Å –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å. –í—Å–µ–≥–æ {len(question_list)} –≤–æ–ø—Ä–æ—Å–æ–≤.")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–¢–æ–≤–∞—Ä—ã üõí')
    btn2 = types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìó')
    btn4 = types.KeyboardButton('–ü–æ–º–æ—â—å ‚ùì')
    cns = types.KeyboardButton('–ó–∞–∫—Ä—ã—Ç—å ‚ùå')
    if its_user[message.from_user.id].admin == 1:
        btn3 = types.KeyboardButton('–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å üéÆ')
        markup.add(btn1, btn2, btn3, btn4, cns)
    else:
        markup.add(btn1, btn2, btn4, cns)
    msg = bot.send_message(message.chat.id,f"–í–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞. –í–∞—à –≤–æ–ø—Ä–æ—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {len(question_list)} –≤ –æ—á–µ—Ä–µ–¥–∏", reply_markup=markup)
    bot.register_next_step_handler(msg, check_answ)

def mud(call):
    bot.send_message(call.id, "–í–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω. –í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é.")
    murk(call)