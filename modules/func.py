from modules.products import findfiles_on_search
from modules.settings import telebot, bot, admin_list, cursor, con, last_photo_indx
from modules.user_log import us_log, its_user

def start(message):
    global its_user
    us_log(message)
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton("üëã –ü–µ—Ä–µ–π—Ç–∏ –∫ –º–µ–Ω—é")
    markup.add(btn1)
    msg = bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –º–∞–≥–∞–∑–∏–Ω ShopBot!", reply_markup=markup)
    bot.register_next_step_handler(msg, start_bot)



def murk(mess):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton('–¢–æ–≤–∞—Ä—ã üõí')
    btn2 = telebot.types.KeyboardButton('–û–ø—Ü–∏–∏ ‚öô')
    cns = telebot.types.KeyboardButton('–ó–∞–∫—Ä—ã—Ç—å ‚ùå')
    if its_user[mess.from_user.id].admin == 1:
        btn3 = telebot.types.KeyboardButton('–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å üéÆ')
        markup.add(btn1, btn2, btn3, cns)
    else:
        markup.add(btn1, btn2, cns)
    msg = bot.send_message(mess.from_user.id, '–í—ã–±–µ—Ä–µ—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
    bot.register_next_step_handler(msg, check_answ)



def start_bot(message):
    if message.text == 'üëã –ü–µ—Ä–µ–π—Ç–∏ –∫ –º–µ–Ω—é':
        murk(message)
    elif message.text == '\start':
        start(message)
        return
    else:
        bot.send_message(message.from_user.id, '–ü—Ä–æ—Å–∏–º –≤–∞—Å –∑–∞—Ä–∞–Ω–µ–µ, –Ω–µ —Å—Ç–æ–∏—Ç –ª–æ–º–∞—Ç—å –ª–æ–≥–∏–∫—É –±–æ—Ç–∞, –≤—Ä—è—Ç–ª–∏ —É –≤–∞—Å —ç—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è, –∫ —Ç–æ–º—É –∂–µ, —Ö—É–∂–µ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ —Ç–æ–ª—å–∫–æ —Å–µ–±–µ, –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–º–µ—Ç–∏—Ç –≤–∞—Å –∫–∞–∫ –≤–∏–Ω–æ–≤–Ω–∏–∫–∞ –∏ –¥–æ–±–∞–≤–∏—Ç –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫. –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–∞–º–µ—Ä—è–Ω–Ω–æ, —Ç–æ –±—É–¥—å—Ç–µ –æ–∫—É—Ä–∞—Ç–Ω–µ–µ –∏ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏, –æ–Ω–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã.')
        msg = bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–µ—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:')
        bot.register_next_step_handler(msg, check_answ)



def check_answ(message):
    if message.text == '–¢–æ–≤–∞—Ä—ã üõí':
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_search_ontag = telebot.types.KeyboardButton('–ü–æ —Ç–µ–≥—É üè∑Ô∏è')
        btn_search_onname = telebot.types.KeyboardButton('–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é üî§')
        btn_close_products = telebot.types.KeyboardButton('–ó–∞–∫—Ä—ã—Ç—å ‚ùå')
        markup.add(btn_search_onname,btn_search_ontag,btn_close_products)
        msg = bot.send_message(message.from_user.id, '–ü–æ–∏—Å–∫:', reply_markup=markup)
        bot.register_next_step_handler(msg, findfiles_on_search)

    elif message.text == '–û–ø—Ü–∏–∏ ‚öô':
        opt(message)

    elif message.text == '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å üéÆ':
        if its_user[message.from_user.id].admin == 1:
            admin_menu(message)
        else:
            bot.send_message(message.chat.id, f'–í—ã (@{message.from_user.username}) –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º –±–æ—Ç–∞. –í —Å–ª—É—á–∞–µ –≤–æ–ø—Ä–æ—Å–æ–≤, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏–ª–∏ –≤–∞–∫–∞–Ω—Å–∏–π –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É (–ü–æ–º–æ—â—å ‚ùì).')

    elif message.text == '–ó–∞–∫—Ä—ã—Ç—å ‚ùå':
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton('/start')
        markup.add(btn1)
        bot.send_message(message.chat.id, "–ë—É–¥—É –∂–¥–∞—Ç—å –Ω–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏.", reply_markup=markup)

    elif message.text == '\start':
        start(message)
        return

    else:
        bot.send_message(message.from_user.id, '–ü—Ä–æ—Å–∏–º –≤–∞—Å, –Ω–µ —Å—Ç–æ–∏—Ç –ª–æ–º–∞—Ç—å –ª–æ–≥–∏–∫—É –±–æ—Ç–∞, –≤—Ä—è—Ç–ª–∏ —É –≤–∞—Å —ç—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è, –∫ —Ç–æ–º—É –∂–µ, —Ö—É–∂–µ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ —Ç–æ–ª—å–∫–æ —Å–µ–±–µ, –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–º–µ—Ç–∏—Ç –≤–∞—Å –∫–∞–∫ –≤–∏–Ω–æ–≤–Ω–∏–∫–∞ –∏ –¥–æ–±–∞–≤–∏—Ç –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫. –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–∞–º–µ—Ä—è–Ω–Ω–æ, —Ç–æ –±—É–¥—å—Ç–µ –æ–∫—É—Ä–∞—Ç–Ω–µ–µ –∏ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏, –æ–Ω–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã.')
        msg = bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–µ—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:')
        bot.register_next_step_handler(msg, check_answ)



def optional(message):
    if message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìó":
        mess = '''**–ò–Ω—Ñ–æ**
–î–∞–Ω–Ω—ã–π –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω, –≤ –±–æ–ª—å—à–µ–π —á–∞—Å—Ç–∏, –≤ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö. –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ –∏–º–µ–µ—Ç, –æ–ø–ª–∞—Ç–∞ –∏ –ø—Ä–æ–¥—É–∫—Ü–∏—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è.
–ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ä–µ—à–∏–ª–∏ –ø–æ–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –Ω–∞–¥–µ–µ–º—Å—è, –≤—ã –µ—â–µ –≤—Å—Ç—Ä–µ—Ç–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π –≤ –±–æ–ª–µ–µ —Å–µ—Ä—å–µ–∑–Ω–æ–º –º–æ—Ç–∏–≤–µ –∏ –æ–Ω–æ –±—É–¥–µ—Ç –≤–∞–º —Ä–µ–∞–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω–æ
–ê –ø–æ–∫–∞ —á—Ç–æ, –º–æ–∂–µ–º –ª–∏—à—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –∫–æ–ø–µ–µ—á–∫–æ–π '''
        bot.send_message(message.chat.id,mess,parse_mode = "Markdown")
        bot.send_message(message.chat.id,"–ë–æ—Ç —Å–æ–∑–¥–∞–Ω: **–ï—â—ë –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**", parse_mode = "Markdown")
        bot.send_message(message.chat.id,"–ù–∞–¥ –±–æ—Ç–æ–º —Ä–∞–±–æ—Ç–∞–ª–∏:") #—Ç—É—Ç –º–æ–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å –¥–µ–≤–æ–≤ (—Ä–∞–∑—Ä–∞–±–æ–≤)

    elif message.text == '–ü–æ–º–æ—â—å ‚ùì':
        markup = telebot.types.InlineKeyboardMarkup()
        btn1 = telebot.types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="close_quest")
        markup.add(btn1)
        bot.send_message(message.from_user.id, '--------------------------------------', reply_markup=telebot.types.ReplyKeyboardRemove())
        msg = bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:', reply_markup=markup)
        bot.register_next_step_handler(msg, quests)

    elif message.text == "–í—ã—Ö–æ–¥ ‚ùå":
        murk(message)

    elif message.text == '\start':
        start(message)
        return

    elif message.text == "–û–ø–æ–≤–µ—â–µ–Ω–∏—è üîî":
        inlinemarkups = telebot.types.InlineKeyboardMarkup()
        inlinemarkups.row_width = 2
        btn1 = telebot.types.InlineKeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å  –æ–ø–æ–≤–µ—â–µ–Ω–∏—è üîï", callback_data="cb_off")
        btn2 = telebot.types.InlineKeyboardButton("–í–∫–ª—é—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è üîî", callback_data="cb_on")
        close_menu = telebot.types.InlineKeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é –æ–ø—Ü–∏–π ‚öô", callback_data="cb_close")
        inlinemarkups.add(btn1, btn2, close_menu)
        bot.send_message(message.chat.id, "–í—ã–∫–ª—é—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è?", reply_markup=inlinemarkups)



def quests(message):
    global question_list
    question_list.append((message.chat.id, message.from_user.username, message.text))
    orders_sql = '''
    INSERT INTO orders
    VALUES (?,?,?);
    '''
    cursor.execute(orders_sql, question_list[-1])
    con.commit()
    for i in admin_list:
        bot.send_message(i,f"–£ –≤–∞—Å –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å. –í—Å–µ–≥–æ {len(question_list)} –≤–æ–ø—Ä–æ—Å–æ–≤.")
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton('–¢–æ–≤–∞—Ä—ã üõí')
    btn2 = telebot.types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìó')
    btn4 = telebot.types.KeyboardButton('–ü–æ–º–æ—â—å ‚ùì')
    cns = telebot.types.KeyboardButton('–ó–∞–∫—Ä—ã—Ç—å ‚ùå')
    if its_user[message.from_user.id].admin == 1:
        btn3 = telebot.types.KeyboardButton('–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å üéÆ')
        markup.add(btn1, btn2, btn3, btn4, cns)
    else:
        markup.add(btn1, btn2, btn4, cns)
    msg = bot.send_message(message.chat.id,f"–í–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞. –í–∞—à –≤–æ–ø—Ä–æ—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {len(question_list)} –≤ –æ—á–µ—Ä–µ–¥–∏", reply_markup=markup)
    bot.register_next_step_handler(msg, check_answ)



def opt(message):
    btn1 = telebot.types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìó')
    btn2 = telebot.types.KeyboardButton('–ü–æ–º–æ—â—å ‚ùì')
    btn3 = telebot.types.KeyboardButton('–û–ø–æ–≤–µ—â–µ–Ω–∏—è üîî')
    cns = telebot.types.KeyboardButton('–í—ã—Ö–æ–¥ ‚ùå')
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(btn1, btn2, btn3, cns)
    msg = bot.send_message(message.chat.id,"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:", reply_markup=markup)
    bot.register_next_step_handler(msg, optional)



def mud(call):
    bot.send_message(call.id, "–í–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω. –í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é.")
    murk(call)


#–ê–¥–º–∏–Ω—Å–∫–∞—è —á–∞—Å—Ç—å


def adm_pls(ID):
    add_admin = f'''
UPDATE users
SET admin = '1'
WHERE id = '{ID}';
'''
    cursor.execute(add_admin)
    con.commit()



def adm_mns(ID):
    add_admin = f'''
UPDATE users
SET admin = NULL
WHERE id = '{ID}';
'''
    cursor.execute(add_admin)
    con.commit()



def admin_menu(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2) #üõ†
    add_prod = telebot.types.KeyboardButton("–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π üè∑‚úè")
    remove_prod = telebot.types.KeyboardButton("–ê–¥–º–∏–Ω—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤ üëÆ‚Äç‚ôÇÔ∏è") #üóë
    qst = telebot.types.KeyboardButton("–í–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚ùì")
    cansel = telebot.types.KeyboardButton("–í—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤ üõë")
    markup.add(add_prod, remove_prod, qst, cansel)
    msg = bot.send_message(message.chat.id, "–û–≥–æ, –≤–∞–∂–Ω—ã–µ –ª—é–¥–∏. –ö–∞–∫–æ–≤–∞ —Ü–µ–ª—å –≤–∞—à–µ–≥–æ –≤–∏–∑–∏—Ç–∞?", reply_markup=markup)
    bot.register_next_step_handler(msg, next_admin_click)



def next_admin_click(message):
    if message.text == "–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π üè∑‚úè":
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn1 = telebot.types.KeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤")
        btn2 = telebot.types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç ‚ûï")
        btn3 = telebot.types.KeyboardButton("—É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç ‚úÇ")
        btn4 = telebot.types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤ üëÆ‚Äç‚ôÇÔ∏è")
        markup.add(btn1, btn2, btn3, btn4)
        # msg = bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è.", reply_markup=telebot.types.ReplyKeyboardRemove())
        # bot.register_next_step_handler(msg, add1)
    elif message.text == "–ê–¥–º–∏–Ω—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤ üëÆ‚Äç‚ôÇÔ∏è":
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        show_adm_list_btn = telebot.types.KeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ üìÑ")
        add_adm_btn = telebot.types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞ ‚ûï")
        del_adm_btn = telebot.types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞ ‚úÇ")
        exit_on_menuadm_btn = telebot.types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤ üëÆ‚Äç‚ôÇÔ∏è")
        markup.add(show_adm_list_btn, add_adm_btn, del_adm_btn, exit_on_menuadm_btn)
        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –∫–∞—Ç–æ–ª–æ–≥–∞:", reply_markup=markup)
        bot.register_next_step_handler(msg, adm_chec)
    elif message.text == "–í–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚ùì":
        user_quest_work(message)
        msg = bot.send_message(message.chat.id, "–ß—Ç–æ –¥–∞–ª—å—à–µ?")
        bot.register_next_step_handler(msg, next_admin_click)
    elif message.text == '\start':
        start(message)
        return
    elif message.text == "–í—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤ üõë":
        bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤.")
        murk(message)


def adm_chec(message):
    if message.text == "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ üìÑ":
        sqlreq = '''
        SELECT user_name FROM admins WHERE admin = 1;'''
        cursor.execute(sqlreq)
        fetchall = cursor.fetchall()
        msg = ''''''
        num = 1
        for i in fetchall:
            msg += (f'''{num}) {i[0]}\n''')
            bot.send_message(message.chat.id, msg)
            num += 1
        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞:")
        bot.register_next_step_handler(msg, adm_chec)
    if message.text == "–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞ ‚ûï":
        pass
    if message.text == "–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞ ‚úÇ":
        msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞:")
        bot.register_next_step_handler(msg, del_adm)
    if message.text == "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–æ–≤ üëÆ‚Äç‚ôÇÔ∏è":
        pass



def del_adm(message):
    sqlreq = '''
    SELECT user_name FROM admins WHERE admin = 1;
    '''
    cursor.execute(sqlreq)
    fetchall = cursor.fetchall()
    admin_name = fetchall[message.text - 1]
    sqlreq2 = '''
    SELECT id FROM admins WHERE user_name = ?;
    '''
    cursor.execute(sqlreq2, admin_name)
    fetchall2 = cursor.fetchall()
    adm_mns(fetchall2[0])

def add1(message):
    global prod_us_var
    # product_list.append(Product(message.text))
    if message.content_type == "text" and message.text != "":
        prod_us_var = []
        prod_us_var.append(last_photo_indx + 1)
        msg = bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–§–æ—Ç–æ** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è (.png).", parse_mode = "Markdown")
        prod_us_var.append(message.text)
        bot.register_next_step_handler(msg, add2)



def add2(message):
    global prod_us_var
    if message.content_type == "photo":
        file = bot.get_file(message.photo[-1].file_id)
        file = bot.download_file(file.file_path)
        with open(f'{prod_us_var[0]}.png', 'wb') as f:
            f.write(file)
        msg = bot.send_message(message.chat.id, '–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –í–≤–µ–¥–∏—Ç–µ **–û–ø–∏—Å–∞–Ω–∏–µ** –æ–±—å—è–≤–ª–µ–Ω–∏—è/–ø—Ä–æ–¥—É–∫—Ç–∞ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.',parse_mode = "Markdown")
        bot.register_next_step_handler(msg, add3)
    else:
        msg = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ .pdf')
        bot.register_next_step_handler(msg, add2)



def add3(message):
    global prod_us_var
    if message.content_type == "text" and message.text != "":
        prod_us_var.append(message.text)
        bot.send_message(message.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ **–¢–µ–≥–∏** –¥–ª—è –æ–±—å—è–≤–ª–µ–Ω–∏—è. –ü—Ä–∏–º–µ—Ä: "#–°–ø–æ—Ä—Ç#–ú–æ–¥–∞#–ï–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞".')



def user_quest_work(message):
    a = cursor.execute("SELECT * FROM orders;")
    a = a.fetchall()
    nomer = 1
    for i in a:
        mess = f'''
–í–æ–ø—Ä–æ—Å ‚Ññ{nomer}

**@{i[1]}**
{i[2]}'''
        bot.send_message(message.chat.id, mess, parse_mode = "Markdown")
        nomer += 1
    bot.send_message(message.chat.id, "–ö –∫–∞–∫–æ–º—É –≤–æ–ø—Ä–æ—Å—É –∂–µ–ª–∞–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏? (–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞)", parse_mode = "Markdown")



@bot.message_handler(commands=["answer"])
def answ(message):
    global question_list
    try:
        id = message.text.split(' ', maxsplit = 2)[1]
        text = message.text.split(' ', maxsplit = 2)[2]
        bot.send_message(question_list[int(id)-1][0], f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å({question_list[int(id)-1][1]}):")
        bot.send_message(question_list[int(id)-1][0], text)
        del question_list[int(id)- 1]
        bot.reply_to(message, '–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')
        cursor.execute(f"DELETE FROM orders WHERE id={question_list[int(id)-1][0]}, text={question_list[int(id)-1][2]};")
    except:
        bot.reply_to(message, "–ù–µ–ª—å–∑—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å.")



@bot.message_handler(commands=["qq"])
def show_question(message):
    if question_list == []:
        bot.send_message(message.chat.id, f'–í–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç.')
    elif message.chat.id in admin_list:
        j = 1
        for i in question_list:
            bot.send_message(message.chat.id, f'{j}) {i[1]} (–æ—Ç @{i[2]})')
            j += 1